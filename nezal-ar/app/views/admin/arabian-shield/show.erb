<script src="/javascripts/base/prototype.js" type="text/javascript"></script>
<script type='text/javascript'>
var GameData = {
    towers : { 
             },
    weapons : {
            }, 
    creeps : {
        },
    templates : {},

    init : function()
    {
        GameData.templates['towers'] = TrimPath.parseDOMTemplate('displayTemplate');
        GameData.templates['weapons'] = TrimPath.parseDOMTemplate('displayTemplate');
        GameData.templates['creeps'] = TrimPath.parseDOMTemplate('displayCreepTemplate');
        GameData.templates['towersUpgrades'] = TrimPath.parseDOMTemplate('displayUpgradesTemplate');
        GameData.templates['weaponsUpgrades'] = TrimPath.parseDOMTemplate('displayUpgradesTemplate');
        new Ajax.Request( '../metadata' , {
                    method : 'get',
                    onSuccess: function(transport) {
                        data = JSON.parse(transport.responseText);
                        GameData.towers = data['towers'];
                        GameData.weapons = data['weapons'];
                        GameData.creeps = data['creeps'];
                        ['towers', 'weapons'].each(function(parent){        
                                  for(var i in GameData[parent])
                                  {
                                      if(!GameData[parent][i].upgrades)
                                          GameData[parent][i].upgrades = "[]";
                                      GameData[parent][i].upgrades = JSON.parse(GameData[parent][i].upgrades);
                                  }
                        })
                        $$('#towers #list')[0].innerHTML = 
                                GameData.templates['towers'].process({list: GameData.towers, type : 'tower'});
                        $$('#weapons #list')[0].innerHTML = 
                                GameData.templates['weapons'].process({list: GameData.weapons, type : 'weapon'});
                        $$('#creeps #list')[0].innerHTML = 
                                GameData.templates['creeps'].process({list: GameData.creeps, type : 'creeps'});
                        $('weaponsUpgrades').innerHTML = 
                                GameData.templates['weaponsUpgrades'].process(GameData.getUpgrades('weapons'));
                        $('towersUpgrades').innerHTML =  
                                GameData.templates['towersUpgrades'].process(GameData.getUpgrades('towers')); 
                    }
                });
    },
    getUpgrades : function(type){
        var names= []; 
        var upgrades = [];
        for (var i in GameData[type] ) 
        {
            names.push(i)
            if(GameData[type][i].upgrades)
            {
                upgrades.push([i, GameData[type][i].upgrades]);
            }
        }
        return { list : upgrades, parent : names, type : type }
    },
    addUpgrade : function(element){
        var type = element.getAttribute('parent')
        var parent = $$("#" + type + "Upgrades select")[0].value
        var upgrade = {
            "cost" : $$("#" + type + "Upgrades #addUpgrade #cost")[0].value,
            "exp" : $$("#" + type + "Upgrades #addUpgrade #exp")[0].value,
            "parent" : parent
        }
        if( !(upgrade["cost"]) || !(upgrade["exp"]) || isNaN(upgrade["cost"]) || isNaN(upgrade["exp"]) )
        {
          alert("Cost and Experience points must exist & be integers");
          return;
        }
        if(type =="towers")
        {
            var fields = { price : 0, power : 0, range : 0, maxHp : 0, rate : 0 };
            for( i in fields )
            {
                fields[i] = $$("#" + type + "Upgrades #addUpgrade #" + i)[0].value;
                if( !(fields[i]) || isNaN(fields[i]))
                {
                  alert(i + " must exist and must be number");
                  return;
                }
                upgrade[i] = parseInt(fields[i]);
            }
            upgrade.rate = parseFloat(fields['rate']);
        }
        if(type =="weapons")
        {
            var fields = { cooldown : 0, factor1 : 0, factor2 : 0 };
            for( i in fields )
            {
                fields[i] = $$("#" + type + "Upgrades #addUpgrade #" + i)[0].value;
                if( !(fields[i]) || isNaN(fields[i]))
                {
                  alert(i + " must exist and must be number");
                  return;
                }
                upgrade[i] = parseFloat(fields[i]);
            }
        }
        upgrade.cost = parseInt(upgrade.cost);
        upgrade.exp = parseInt(upgrade.exp);
        if(!GameData[type][parent].upgrades)
            GameData[type][parent].upgrades = [];
        GameData[type][parent].upgrades.push(upgrade);
       $(type + "Upgrades").innerHTML =  
                                GameData.templates[type + 'Upgrades'].process(GameData.getUpgrades(type)); 
    },
    deleteUpgrade : function(element){
        var type = element.getAttribute('type');
        var parent = element.getAttribute('parent');
        var order =  element.getAttribute('order');
        GameData[type][parent].upgrades.splice(order, 1);
        $(type + "Upgrades").innerHTML =  
                          GameData.templates[type + 'Upgrades'].process(GameData.getUpgrades(type));   
    },
    addTower : function()
    {
        var tower = {
            "name" : $$("#towers #addTower #name")[0].value.split(' ').join(''),
            "cost" : $$("#towers #addTower #cost")[0].value,
            "exp" : $$("#towers #addTower #exp")[0].value,
            "upgradeLevel" : $$("#towers #addTower #upgradeLevel")[0].value,
            "unlocked" : $$("#towers #addTower #unlocked")[0].checked,
            "upgrades" : []
        }
        if( !(tower["name"]) || !(tower["cost"]) || !(tower["exp"]) || !(tower["upgradeLevel"]) ||
             isNaN(tower["cost"]) || isNaN(tower["exp"]) || isNaN(tower["upgradeLevel"]) )
        {
          alert("Name must exist & Cost and Experience points & upgrade level must be integers");
          return;
        }
        tower.cost = parseInt(tower.cost);
        tower.exp = parseInt(tower.exp);
        tower.upgradeLevel = parseInt(tower.upgradeLevel);
        if(GameData.towers[tower['name']])
            tower.upgrades = GameData.towers[tower['name']].upgrades;
        GameData.towers[tower['name']] = tower;
        $$("#towers #addTower #name")[0].value = "";
        $$("#towers #addTower #cost")[0].value = "";
        $$("#towers #addTower #exp")[0].value = "";
        $$("#towers #addTower #upgradeLevel")[0].value = "";
        $$("#towers #addTower #unlocked")[0].checked = false;
        $$('#towers #list')[0].innerHTML =
                                GameData.templates['towers'].process({list: GameData.towers, type : 'tower'});
        $('towersUpgrades').innerHTML =  
                                GameData.templates['towersUpgrades'].process(GameData.getUpgrades('towers')); 
    },
    deleteTower : function(element)
    {
        delete GameData.towers[element.getAttribute('name')];
        $$('#towers #list')[0].innerHTML = 
                                GameData.templates['towers'].process({list: GameData.towers, type : 'tower'});
        $('towersUpgrades').innerHTML =  
                                GameData.templates['towersUpgrades'].process(GameData.getUpgrades('towers'));
    },
    addWeapon : function()
    {
        var weapon = {
            "name" : $$("#weapons #addWeapon #name")[0].value.split(' ').join(''),
            "cost" : $$("#weapons #addWeapon #cost")[0].value,
            "exp" : $$("#weapons #addWeapon #exp")[0].value,
            "upgradeLevel" : $$("#weapons #addWeapon #upgradeLevel")[0].value,
            "unlocked" : $$("#weapons #addWeapon #unlocked")[0].checked,
            "upgrades" : []
        }
        if( !(weapon["name"]) || !(weapon["cost"]) || !(weapon["exp"]) || !(weapon["upgradeLevel"]) ||
            isNaN(weapon["cost"]) || isNaN(weapon["exp"])  || isNaN(weapon["upgradeLevel"]) )
        {
          alert("Name must exist & Cost and Experience points & upgrade level must be integers");
          return;
        }
        weapon.cost = parseInt(weapon.cost);
        weapon.exp = parseInt(weapon.exp);
        weapon.upgradeLevel = parseInt(weapon.upgradeLevel);
        if(GameData.weapons[weapon['name']])
            weapon.upgrades = GameData.weapons[weapon['name']].upgrades;
        GameData.weapons[weapon['name']] = weapon;
        $$("#weapons #addWeapon #name")[0].value = "";
        $$("#weapons #addWeapon #cost")[0].value = "";
        $$("#weapons #addWeapon #exp")[0].value = "";
        $$("#weapons #addWeapon #upgradeLevel")[0].value = "";
        $$("#weapons #addWeapon #unlocked")[0].checked = false;
        $$("#weapons #list")[0].innerHTML = 
                                GameData.templates['weapons'].process({list: GameData.weapons, type : 'weapon'});
        $('weaponsUpgrades').innerHTML = 
                                GameData.templates['weaponsUpgrades'].process(GameData.getUpgrades('weapons'));
    },
    deleteWeapon : function(element)
    {
        delete GameData.weapons[element.getAttribute('name')];
        $$("#weapons #list")[0].innerHTML = 
                                GameData.templates['weapons'].process({list: GameData.weapons, type : 'weapon'});
        $('weaponsUpgrades').innerHTML = 
                                GameData.templates['weaponsUpgrades'].process(GameData.getUpgrades('weapons'));
    },
    addCreep : function()
    {
        var creep = {
            "name" : $$("#creeps #addCreep #name")[0].value,
        }
        if(!creep["name"])
        {
          alert("Name must exist");
          return;
        }
        GameData.creeps[creep['name']] = creep;
        $$("#creeps #addCreep #name")[0].value = "";
        $$("#creeps #list")[0].innerHTML = 
                                GameData.templates['creeps'].process({list: GameData.creeps, type : 'creep'});
    },
    deleteCreep : function(element){
        delete GameData.creeps[element.getAttribute('name')];
        $$("#creeps #list")[0].innerHTML = 
                                GameData.templates['creeps'].process({list: GameData.creeps, type : 'creep'});
    },
    deleteElement : function(element)
    {
        type = element.getAttribute('type');
        if(type == 'tower')
        {
            GameData.deleteTower(element);
        }else if(type == 'weapon'){
            GameData.deleteWeapon(element);
        }else if(type == 'upgrade'){
            GameData.deleteUpgrade(element);
        }else if(type == 'creep'){ 
            GameData.deleteCreep(element);
        }
    }, 
    saveData : function()
    {
        data = { towers : GameData.towers, 
                  weapons : GameData.weapons,
                  creeps : GameData.creeps }
        new Ajax.Request( '../metadata' , {
                                    method : 'put',
                                    parameters : { "data" : JSON.stringify(data) },
                                    onSuccess: function(transport) {
                                      window.location = window.location
                                    }
                                });
                            
    }
}
$(document).observe('dom:loaded',function(){ GameData.init();});
</script>

<div id="game">

    <div id="backLink"> 
      <a href="/<%=AdminController::ADMIN_URL%>/<%=@game[:name]%>">
        Back
      </a>
    </div>

    <div id="game_name">
        <%=@game.name%>
    </div>
    <div id="towers">
        <div class="title">Towers</div>
        <div id="list">
        </div>
        <div id="addTower" class="title add">
            <LABEL for="addTower" class="label">Add New Tower</LABEL>
            <div class="form_row">  
                <LABEL for="name">Name</LABEL>
                <INPUT type="text" id="name" name='name'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="cost">Cost</LABEL>
                <INPUT type="text" id="cost" name='cost'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="exp">Experience Points</LABEL>
                <INPUT type="text" id="exp" name='exp'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="upgradeLevel">Start Upgrade Level</LABEL>
                <INPUT type="text" id="upgradeLevel" name='upgradeLevel'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="unlocked">Unlocked</LABEL>
                <INPUT type="checkbox" id="unlocked" name="unlocked" value="1"><BR>
            </div>
            <div class="form_row">
                <input type="submit" value="Add" class="submit" onclick="GameData.addTower(); return false;"/>
            </div>
        </div>      
	  </div>
    <div id="towersUpgrades">
	  </div>
    <div id="weapons">
        <div class="title">Weapons</div>
        <div id="list">
        </div>
        <div id="addWeapon" class="title add">
            <LABEL for="addWeapon"  class="label">Add New Weapon</LABEL>
            <div class="form_row">  
                <LABEL for="name">Name</LABEL>
                <INPUT type="text" id="name" name='name'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="cost">Cost</LABEL>
                <INPUT type="text" id="cost" name='cost'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="exp">Experience Points</LABEL>
                <INPUT type="text" id="exp" name='exp'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="upgradeLevel">Start Upgrade Level</LABEL>
                <INPUT type="text" id="upgradeLevel" name='upgradeLevel'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="unlocked">Unlocked</LABEL>
                <INPUT type="checkbox" id="unlocked" name="unlocked" value="1"><BR>
            </div>
            <div class="form_row">
                <input type="submit" value="Add" class="submit" onclick="GameData.addWeapon(); return false;"/>
            </div>
        </div>      
	  </div>
    <div id="weaponsUpgrades">
	  </div>
    <div id="creeps">
        <div class="title">Creeps</div>
        <div id="list">
        </div>
        <div id="addCreep" class="title add">
            <LABEL for="addCreep"  class="label">Add New Creep</LABEL>
            <div class="form_row">  
                <LABEL for="name">Name</LABEL>
                <INPUT type="text" id="name" name='name'><BR>
            </div>
            <div class="form_row">
                <input type="submit" value="Add" class="submit" onclick="GameData.addCreep(); return false;"/>
            </div>
        </div>      
	  </div>
    <div style="text-align : right;">
        <input type="submit" value="AM Done .. Save That" class="submit" onclick="GameData.saveData(); return false;"/>
    </div>
    
    <textarea id="displayTemplate" style="display:none;">
        {for element in list}
    		  	<div>
      	  	    <span class="column" style="width:15%;"> 
  	    	  	      <LABEL for="name">Name: </LABEL>
      	  	        ${element['name']} 
    	  	      </span>
          	    <span class="column" style="width:15%;"> 
                    <LABEL for="cost">Cost: </LABEL>  
          	        ${element['cost']} 
      	        </span>  
          	    <span class="column" style="width:20%;"> 
                    <LABEL for="exp">Experience Points: </LABEL>  
          	        ${element['exp']} 
      	        </span>  
          	    <span class="column" style="width:20%;"> 
                    <LABEL for="exp">Upgrade Level: </LABEL>  
          	        ${element['upgradeLevel']} 
      	        </span>  
          	    <span class="column" style="width:18%;"> 
                    <LABEL for="exp">Unlocked: </LABEL>  
          	        ${element['unlocked']} 
      	        </span>  
      	        <span class="delete" style="width:2%;">
                  <a name="${element['name']}" type="${type}" href="#" 
                      onclick="GameData.deleteElement(this);return false;" class="submit_links"> x </a>
                </span>
            </div>
            <div style="clear:both"></div>
        {/for}
    </textarea>
    <textarea id="displayCreepTemplate" style="display:none;">
        {for element in list}
    		  	<div>
      	  	    <span class="column"> 
  	    	  	      <LABEL for="name">Name: </LABEL>
      	  	        ${element['name']} 
    	  	      </span>
      	        <span class="delete" >
                  <a name="${element['name']}" type="${type}" href="#"
                     onclick="GameData.deleteElement(this);return false;" class="submit_links"> x </a>
                </span>
            </div>
            <div style="clear:both"></div>
        {/for}
    </textarea>
    <textarea id="displayUpgradesTemplate" style="display:none;">
        <div class="title">${type.capitalize()} Upgrades</div>
        <div id="list">
        {for element in list}
        {if (element[1].length>0)}
            <div>
              <div class="upgradeParent">${element[0]}:</div>
              <div style='margin-left : 10%;'>
              {for upgrade in element[1]}
          		  	<div>
              		  	<span class="column" style="width:10%;"> 
                          <LABEL for="order">Order: </LABEL>  
                	        ${parseInt(upgrade_index)+1}
            	        </span>  
            	        {for i in Object.keys(upgrade)}
            	            {if (i!='parent')}
                      	    <span class="column" style="width:12%;"> 
                              <LABEL for="exp">${i.capitalize()} : </LABEL>  
                    	        ${upgrade[i]} 
                  	        </span>  
              	          {/if}
            	        {/for}
            	        <span class="delete" >
                          <a parent="${element[0]}" type="${type}" href="#" order="${upgrade_index}"
                              onclick="GameData.deleteUpgrade(this);return false;" class="submit_links"> x </a>
                      </span>
                  </div>
                  <div style="clear:both"></div>
                {/for}
                </div>
            </div>
        {/if}
        {/for}
        </div>
        <div id="addUpgrade" class="title add">
            <LABEL for="addUpgrade"  class="label">Add New Upgrade</LABEL>
            <div class="form_row">    
                <LABEL for="exp">Affects</LABEL>
                <select id="category" name="category">
                  {for element in parent }                        
                    <option value="${element}"> ${element} </option>
                  {/for}
                </select>
            </div>
            <div class="form_row">  
                <LABEL for="cost">Upgrade Cost</LABEL>
                <INPUT type="text" id="cost" name='cost'><BR>
            </div>
            <div class="form_row">  
                <LABEL for="exp">Experience Points</LABEL>
                <INPUT type="text" id="exp" name='exp'><BR>
            </div>
            {if (type=='towers')}
                <div class="form_row">  
                    <LABEL for="cost">Power</LABEL>
                    <INPUT type="text" id="power" name='power'><BR>
                </div>
                <div class="form_row">  
                    <LABEL for="exp">Rate</LABEL>
                    <INPUT type="text" id="rate" name='rate'><BR>
                </div>
                <div class="form_row">  
                    <LABEL for="price">Play Price</LABEL>
                    <INPUT type="text" id="price" name='price'><BR>
                </div>
                <div class="form_row">  
                    <LABEL for="range">Range</LABEL>
                    <INPUT type="text" id="range" name='range'><BR>
                </div>
                <div class="form_row">  
                    <LABEL for="maxHp">MaxHp</LABEL>
                    <INPUT type="text" id="maxHp" name='maxHp'><BR>
                </div>
            {else}
                <div class="form_row">  
                    <LABEL for="cooldown">Cool Down</LABEL>
                    <INPUT type="text" id="cooldown" name='cooldown'><BR>
                </div>
                <div class="form_row">  
                    <LABEL for="factor1">Factor 1</LABEL>
                    <INPUT type="text" id="factor1" name='factor1'><BR>
                </div>
                <div class="form_row">  
                    <LABEL for="factor2">Factor 2</LABEL>
                    <INPUT type="text" id="factor2" name='factor2'><BR>
                </div>
            {/if}
            <div class="form_row">
                <input type="submit" parent="${type}" value="Add" class="submit" 
                        onclick="GameData.addUpgrade(this); return false;"/>
            </div>
        </div>
    </textarea>
</div>

<style>
    #towers, #weapons, #towersUpgrades, #creeps, #weaponsUpgrades
    {
        padding : 20px;
        border-top : solid 1px;
    }
    .upgradeParent
    {
      color : chocolate;
    }
</style>


